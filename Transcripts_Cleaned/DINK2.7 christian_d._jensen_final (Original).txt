Hello, my name is Christian Lamsgaard Jensen and I'm an associate professor here at DTU Compute. Today we are going to be talking about scalability and some of the security issues that arise when we build secure systems or large scale systems. The ambition here is not to make you more proficient as programmers because you cannot learn that in just a few minutes but hopefully you will learn some of the issues that you need to think about when you build large scalable systems from the security perspective. So in general there are three main areas that we need to address when we build secure systems. The first one is that as systems grow they become more complex and so complexity is an issue that we need to address and a problem that generally arise for security in these large scale systems. The second thing is that the attack surface, the overall area from where the system can be attacked grows when we build larger systems. And then finally as we build larger systems we build them because we want to support more users so the entire user base grows and therefore the user management becomes a very important issue that we need to address in large scale systems. So those are the three main areas that were important for building security in scalable systems. Complexity is an inherent property of the systems. As systems grow larger they typically also become more complex because there are either more components in the system or there are more instances of the same component inside the system. So that also means that we need to manage all these different components. We need to orchestrate them so that they work in concert together to support the purpose of our application and all this extra interaction, all these larger number of interactions and APIs that we need to support inside our system means that the entire system becomes more complex so it becomes harder to test and to verify in different ways. So that is one of the problems that we need to address when we build secure scalable systems. This means that we need to think about very much about and understand all the components, all the security properties of our components, all the interactions and the security properties of these interactions and potential any side effects that could be there either inside the components in the interaction between the components or between the system and the outside world. So secondly the attack surface. The attack surface is an external property of the system that describes how we see the system from the outside. As systems grow larger they will have presence in more locations, they will be accessible in more ways from more people and therefore there are more ways that things can go wrong essentially inside the system. So this number, the increasing number of locations, the ways that we have replicated our system throughout the world but also the APIs in the systems that become accessible from more peoples and from more locations is something that we need to address. Just like the Germans faced during the Second World War with the Enigma machine where there was a machine that was captured by the British from a U-boat in the Atlantic and that way the British knew more about the internal settings of the machine and helped them decrypt the Nazi communication during the Second World War. So what you need to take away from this is that we need to be thinking about what kind of interfaces we expose to the outside world, what kind of services we make available and to try to keep this as small and as compact as possible. And so the third property we need to think about is the user base. That when we have large scalable systems then we get a much larger user base and all these users have to be enrolled into the system so we need to find out who they are and give them some kind of a system identity. We need to be able to authenticate them for instance with a password when they come back into the system so that we can treat them in the same way whenever they are here. And all these things are difficult in large scale systems. So imagine that Facebook actually had to verify your real world identity before they could give you a Facebook account. This is something that is clearly not feasible when you have billions of users in the system. So the fact that you have all these many users creates a problem. It becomes easy for people to create fake users who can distribute fake news. But also you have the problem of managing all the privileges of these different users inside your systems. So there are some users who have some privileges, other users have other privileges and you need to make sure that you have assigned the right privileges to the specific user that you have in hand because otherwise the overall security policy is likely to become validated. And once you have assigned these privileges, the status of users can change either because they get promoted in some way in your system or because they simply cease, stop being users in your system. And so you need to be able to change these, manage these privileges throughout the lifetime of the system. And that is something that has traditionally been very, very difficult and is still something that is very, very difficult. So what can we take away from this? I think the most important thing is that we manage our users in such a way that the consequences of their actions is proportional to the verification process that we had when we enrolled them into the system. So if we enroll people with very, very little confidence in who they really are, then the consequences of their actions should be relatively small. And that is something when we build systems that can be very, very hard to anticipate what are the impact of what users do in the systems. Basically, we need to have thought of those before we created the systems. And that's, of course, difficult. So we have now looked at the three factors that are most important to consider when we build security into our scalable system. The complexity of the system that we need to address to make sure that we manage it and that we understand all the complexities inside the system. The attack surface of the system that we need to also address and make sure that we understand where our system can be reached from and also where it can be attacked from. And then finally, the large user base that we get when we get a large scale distributed system and how to manage that large user base. Those are the three important things that we need to consider when we build scalable systems. So you have not been given any tools or prescriptions on how to build these systems, but at least you have been given some areas to consider and some places to look when you try to design your systems and implement them and in the future test your system. So enjoy building large scale secure systems.
